{"filter":false,"title":"server.js","tooltip":"/server.js","undoManager":{"mark":16,"position":16,"stack":[[{"start":{"row":0,"column":0},"end":{"row":100,"column":0},"action":"remove","lines":["const express = require('express');","const bodyParser = require('body-parser');","const cors = require('cors');","const bcrypt = require('bcrypt');","const mysql = require('mysql2');","","const app = express();","const port = 3000;","","// Middleware","app.use(cors());","app.use(express.json());","app.use(bodyParser.urlencoded({ extended: true }));","","// Configuración de la conexión a la base de datos MySQL","const db = mysql.createConnection({","  host: 'dev-nrc-696.cxcioasii3xc.us-west-2.rds.amazonaws.com',","  user: 'leonardog',","  password: 'L30n4rd0$',","  database: 'db_users'","});","","// Conexión a la base de datos MySQL","db.connect(err => {","  if (err) {","    console.error('Error al conectar a la base de datos:', err);","    throw err;","  }","  console.log('Conexión exitosa a la base de datos MySQL');","});","","// Endpoint para buscar usuarios por número de identificación","app.get('/users', (req, res) => {","  const { identification } = req.query;","","  if (!identification) {","    return res.status(400).json({ error: 'El número de identificación es requerido' });","  }","","  const query = 'SELECT * FROM users WHERE identificacion = ?';","  db.query(query, [identification], (err, results) => {","    if (err) {","      console.error('Error al buscar usuarios:', err);","      res.status(500).json({ error: 'Error al buscar usuarios en la base de datos' });","    } else {","      res.status(200).json(results);","    }","  });","});","","// Endpoint para registrar un nuevo usuario","app.post('/register', async (req, res) => {","  const { nombre, apellido, identificacion, password } = req.body;","","  try {","    // Encriptar la contraseña antes de almacenarla en la base de datos","    const hashedPassword = await bcrypt.hash(password, 10);","","    const insertQuery = 'INSERT INTO users (nombre, apellido, identificacion, password) VALUES (?, ?, ?, ?)';","    db.query(insertQuery, [nombre, apellido, identificacion, hashedPassword], (err, result) => {","      if (err) {","        console.error('Error al registrar usuario:', err);","        res.status(500).json({ error: 'Error al registrar usuario en la base de datos' });","      } else {","        console.log('Usuario registrado correctamente');","        res.status(201).json({ message: 'Usuario registrado correctamente' });","      }","    });","  } catch (error) {","    console.error('Error al encriptar la contraseña:', error);","    res.status(500).json({ error: 'Error al registrar usuario' });","  }","});","","// Ruta de login","app.post('/login', (req, res) => {","  const { identificacion, password } = req.body;","","  const sql = 'SELECT * FROM users WHERE identificacion = ?';","  db.query(sql, [identificacion], (err, results) => {","    if (err) {","      console.error('Error querying the database:', err);","      return res.status(500).send('Error during login.');","    }","    if (results.length === 0) {","      return res.status(401).send('Invalid credentials.');","    }","    const user = results[0];","    if (bcrypt.compareSync(password, user.password)) {","      res.status(200).json({ message: 'Login successful.' });","    } else {","      res.status(401).json({ error: 'Invalid credentials.' });","    }","  });","});","","// Iniciar el servidor","app.listen(port, () => {","  console.log(`Servidor backend corriendo en http://localhost:${port}`);","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["const express = require('express');","const bodyParser = require('body-parser');","const cors = require('cors');","const bcrypt = require('bcrypt');","const mysql = require('mysql2');","","const app = express();","const port = 3000;","","// Middleware","app.use(cors());","app.use(express.json());","app.use(bodyParser.urlencoded({ extended: true }));","app.use(express.static(path.join(__dirname, 'frontend', 'dist', 'frontend')));","// Configuración de la conexión a la base de datos MySQL","const db = mysql.createConnection({","  host: 'dev-nrc-696.cxcioasii3xc.us-west-2.rds.amazonaws.com',","  user: 'leonardog',","  password: 'L30n4rd0$',","  database: 'db_users'","});","","// Conexión a la base de datos MySQL","db.connect(err => {","  if (err) {","    console.error('Error al conectar a la base de datos:', err);","    throw err;","  }","  console.log('Conexión exitosa a la base de datos MySQL');","});","","// Endpoint para buscar usuarios por número de identificación","app.get('/users', (req, res) => {","  const { identification } = req.query;","","  if (!identification) {","    return res.status(400).json({ error: 'El número de identificación es requerido' });","  }","","  const query = 'SELECT * FROM users WHERE identificacion = ?';","  db.query(query, [identification], (err, results) => {","    if (err) {","      console.error('Error al buscar usuarios:', err);","      res.status(500).json({ error: 'Error al buscar usuarios en la base de datos' });","    } else {","      res.status(200).json(results);","    }","  });","});","","// Endpoint para registrar un nuevo usuario","app.post('/register', async (req, res) => {","  const { nombre, apellido, identificacion, password } = req.body;","","  try {","    // Encriptar la contraseña antes de almacenarla en la base de datos","    const hashedPassword = await bcrypt.hash(password, 10);","","    const insertQuery = 'INSERT INTO users (nombre, apellido, identificacion, password) VALUES (?, ?, ?, ?)';","    db.query(insertQuery, [nombre, apellido, identificacion, hashedPassword], (err, result) => {","      if (err) {","        console.error('Error al registrar usuario:', err);","        res.status(500).json({ error: 'Error al registrar usuario en la base de datos' });","      } else {","        console.log('Usuario registrado correctamente');","        res.status(201).json({ message: 'Usuario registrado correctamente' });","      }","    });","  } catch (error) {","    console.error('Error al encriptar la contraseña:', error);","    res.status(500).json({ error: 'Error al registrar usuario' });","  }","});","","// Ruta de login","app.post('/login', (req, res) => {","  const { identificacion, password } = req.body;","","  const sql = 'SELECT * FROM users WHERE identificacion = ?';","  db.query(sql, [identificacion], (err, results) => {","    if (err) {","      console.error('Error querying the database:', err);","      return res.status(500).send('Error during login.');","    }","    if (results.length === 0) {","      return res.status(401).send('Invalid credentials.');","    }","    const user = results[0];","    if (bcrypt.compareSync(password, user.password)) {","      res.status(200).json({ message: 'Login successful.' });","    } else {","      res.status(401).json({ error: 'Invalid credentials.' });","    }","  });","});","","// Catch-All Route to Serve Angular App","app.get('*', (req, res) => {","  res.sendFile(path.join(__dirname, 'frontend', 'dist', 'frontend', 'index.html'));","});","","// Iniciar el servidor","app.listen(port, () => {","  console.log(`Servidor backend corriendo en http://localhost:${port}`);","});",""]}],[{"start":{"row":7,"column":13},"end":{"row":7,"column":17},"action":"remove","lines":["3000"],"id":3},{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"remove","lines":[" "]}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"insert","lines":[" "],"id":4},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["8"]},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["0"]},{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"insert","lines":["8"]},{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"insert","lines":["0"]}],[{"start":{"row":0,"column":35},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":29},"action":"insert","lines":["const path = require('path');"],"id":6}],[{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"insert","lines":["b"],"id":7},{"start":{"row":99,"column":69},"end":{"row":99,"column":70},"action":"insert","lines":["r"]},{"start":{"row":99,"column":70},"end":{"row":99,"column":71},"action":"insert","lines":["o"]},{"start":{"row":99,"column":71},"end":{"row":99,"column":72},"action":"insert","lines":["w"]},{"start":{"row":99,"column":72},"end":{"row":99,"column":73},"action":"insert","lines":["s"]},{"start":{"row":99,"column":73},"end":{"row":99,"column":74},"action":"insert","lines":["e"]},{"start":{"row":99,"column":74},"end":{"row":99,"column":75},"action":"insert","lines":["r"]}],[{"start":{"row":99,"column":75},"end":{"row":99,"column":76},"action":"insert","lines":[","],"id":8}],[{"start":{"row":99,"column":76},"end":{"row":99,"column":77},"action":"insert","lines":[" "],"id":9}],[{"start":{"row":99,"column":68},"end":{"row":99,"column":69},"action":"insert","lines":["'"],"id":10}],[{"start":{"row":99,"column":76},"end":{"row":99,"column":77},"action":"insert","lines":["'"],"id":11}],[{"start":{"row":99,"column":86},"end":{"row":99,"column":87},"action":"insert","lines":["c"],"id":12},{"start":{"row":99,"column":87},"end":{"row":99,"column":88},"action":"insert","lines":["s"]},{"start":{"row":99,"column":88},"end":{"row":99,"column":89},"action":"insert","lines":["r"]},{"start":{"row":99,"column":89},"end":{"row":99,"column":90},"action":"insert","lines":["."]}],[{"start":{"row":99,"column":88},"end":{"row":99,"column":89},"action":"remove","lines":["r"],"id":13},{"start":{"row":99,"column":87},"end":{"row":99,"column":88},"action":"remove","lines":["s"]},{"start":{"row":99,"column":86},"end":{"row":99,"column":87},"action":"remove","lines":["c"]}],[{"start":{"row":99,"column":85},"end":{"row":99,"column":86},"action":"remove","lines":["."],"id":14}],[{"start":{"row":99,"column":79},"end":{"row":99,"column":81},"action":"insert","lines":["''"],"id":15}],[{"start":{"row":99,"column":81},"end":{"row":99,"column":82},"action":"insert","lines":[","],"id":16}],[{"start":{"row":99,"column":80},"end":{"row":99,"column":81},"action":"insert","lines":["l"],"id":17},{"start":{"row":99,"column":81},"end":{"row":99,"column":82},"action":"insert","lines":["o"]},{"start":{"row":99,"column":82},"end":{"row":99,"column":83},"action":"insert","lines":["g"]},{"start":{"row":99,"column":83},"end":{"row":99,"column":84},"action":"insert","lines":["i"]},{"start":{"row":99,"column":84},"end":{"row":99,"column":85},"action":"insert","lines":["n"]}],[{"start":{"row":14,"column":74},"end":{"row":14,"column":85},"action":"insert","lines":[", 'browser'"],"id":18}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":28,"column":3},"end":{"row":28,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1719118696060,"hash":"4bdf8d7c80cdd1fe51890949e26c2e260c316692"}